<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/halo"
		 creationComplete="group1_initializeHandler(event)" width="100%">
	
	<fx:Script>
		<![CDATA[
			import flash.events.MouseEvent;
			
			import mmalab.softwarestudies.asianculture.data.models.Dataset;
			import mmalab.softwarestudies.asianculture.graph.events.SelectValueEvent;
			import mmalab.softwarestudies.asianculture.graph.utils.HistoPieUtil;
			
			import mx.binding.utils.ChangeWatcher;
			import mx.charts.HitData;
			import mx.charts.series.items.ColumnSeriesItem;
			import mx.collections.ArrayCollection;
			import mx.effects.easing.Quintic;
			import mx.events.FlexEvent;
			import mx.formatters.NumberFormatter;
			
			[Bindable]
			public var dataset:Dataset;
			[Bindable]
			public var selectedIdx:Array;
			[Bindable]
			public var statIdx:String;
/*			[Bindable]
			public var statIdy:String;*/
			
			[Bindable]
			public var dispLabels:Boolean;
			
			[Bindable]
			public var showDataTips:Boolean;
			
			private var histoPieUtil:HistoPieUtil = new HistoPieUtil();
			private var dataWatcher:ChangeWatcher;
			
			protected function barseries1_clickHandler(event:MouseEvent):void
			{
				var selectValueEvent:SelectValueEvent = new SelectValueEvent(SelectValueEvent.VALUE_SELECTED);
				selectValueEvent.selectedValues = new Array();
				for each (var idx:int in colseries1.selectedIndices) {
					for (var i:int =0; histoPieUtil.chartIDs && i<histoPieUtil.chartIDs[idx].length; i++) {
						selectValueEvent.selectedValues.push(histoPieUtil.chartIDs[idx][i]);
					}
				}
				dispatchEvent(selectValueEvent);
				
			}
			
			private function chart_dataTipFunction(item:HitData):String {
				var chartItem:ColumnSeriesItem = item.chartItem as ColumnSeriesItem;
				var tip:String = "<font color='#CECFD1' size='14'><b>" + statIdx + ":</b> " + chartItem.item.value + "<br/>"
					+chartItem.item.label + "</font>";
				return tip;
			}
			
			
			protected function group1_initializeHandler(event:FlexEvent):void
			{
				if (dataset != null) {
					histoPieUtil.computeBarchartElements(dataset.values, this.statIdx, dispLabels);
					barchart1.dataProvider = new ArrayCollection(histoPieUtil.chartValues);
				}
				this.dataWatcher = ChangeWatcher.watch(this, 'selectedIdx', dataChangeHandler);
				this.dataChangeHandler();
			}
			
			private function dataChangeHandler(event:Event=null):void{
				
				var selectedBars:Array = new Array();
				for (var idx:int=0; idx<histoPieUtil.chartIDs.length && selectedIdx; idx++) {
					for (var i:int=0; histoPieUtil.chartIDs[idx] && i<histoPieUtil.chartIDs[idx].length; i++) {
						if (selectedIdx.indexOf(histoPieUtil.chartIDs[idx][i]) >= 0)  {
							selectedBars.push(idx);
							break;
						}
					}
				}
				colseries1.selectedIndices = selectedBars;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<mx:NumberFormatter id="numberFormatter" precision="2" 
							useThousandsSeparator="true" useNegativeSign="true" />
		<mx:SeriesSlide id="slideEffect" direction="up" duration="2000" easingFunction="{Quintic.easeInOut}" />
		<mx:Stroke id="s2" color="0x646467" alpha="1" />
	</fx:Declarations>
	
	<s:Rect width="100%" height="100%">
		<s:fill><s:SolidColor color="0x212121" /></s:fill>
	</s:Rect>
	<mx:ColumnChart x="0" y="0" id="barchart1" width="100%" height="100%" selectionMode="multiple" 
					dataTipFunction="chart_dataTipFunction"
					dataTipRenderer="mmalab.softwarestudies.asianculture.graph.views.NoImageDataTip"
					showDataTips="{showDataTips}" mouseUp="barseries1_clickHandler(event)" type="clustered" >
		<mx:verticalAxis>
			<mx:LinearAxis id="linY" title="number of items" autoAdjust="true" baseAtZero="true" />
		</mx:verticalAxis>
		<mx:horizontalAxis>
			<mx:CategoryAxis id="catAxis" categoryField="label" displayName="{statIdx}" />
		</mx:horizontalAxis>
		<mx:series>
			<mx:ColumnSeries id="colseries1" displayName="values" xField="label" yField="value" sortOnXField="true"
							 selectable="true" >
				<mx:fill>
					<s:SolidColor color="0xCDCFD1" />
				</mx:fill>
			</mx:ColumnSeries>
		</mx:series>
		<mx:backgroundElements>
			<mx:GridLines id="gridLines" gridDirection="horizontal" horizontalStroke="{s2}" />
		</mx:backgroundElements>
	</mx:ColumnChart>
</s:Group>
