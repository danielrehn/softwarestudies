<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/halo"
		 xmlns:utils="mmalab.softwarestudies.asianculture.graph.utils.*"
		 width="300" height="300" initialize="group1_initializeHandler(event)" >
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/halo";
		
		.itemrendererstyle {
			radius: 3;
			color: "0x999999";
			base-color: "0x000099";
			item-roll-over-color: "0xFFFF00";
			item-disabled-color: "0x00FF00";
			item-selection-color: "0x0000FF";
		}
		
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import flash.events.MouseEvent;
			import mx.events.FlexEvent;
			import flash.geom.Point;
			
			import mmalab.softwarestudies.asianculture.data.models.Dataset;
			import mmalab.softwarestudies.asianculture.graph.events.SelectValueEvent;
			
			import mx.charts.HitData;
			import mx.charts.LinearAxis;
			import mx.charts.series.items.PlotSeriesItem;
			import mx.collections.ArrayCollection;
			
			[Bindable]
			public var dataset:Dataset;
			[Bindable]
			public var selectedIdx:Array;
			[Bindable]
			public var statIdx:String;
			[Bindable]
			public var statIdy:String;
			
			private function series1_clickHandler(event:MouseEvent):void
			{
				var selectValueEvent:SelectValueEvent = new SelectValueEvent(SelectValueEvent.VALUE_SELECTED);
				selectValueEvent.selectedValues = series1.selectedIndices;
				dispatchEvent(selectValueEvent);
			}
		
			private function chart_dataTipFunction(item:HitData):String {
				var chartItem:PlotSeriesItem = item.chartItem as PlotSeriesItem;
				var str:String = chartItem.item.name as String;
				var tip:String = "<b>" + str.slice(0, str.lastIndexOf(".")) + "</b><br/>"
					+ "<b>" + statIdx + ":</b> " + chartItem.item[statIdx] + "<br/>"
					+ "<b>" + statIdy + ":</b> " + chartItem.item[statIdy];
				return tip;
			}
			
/*			private function check():void {
				var p1:Point = new Point(range.rectX, range.rectY);
				var p1Global:Point = chart1.localToGlobal(p1);
				var p2:Point = new Point(range.rectWidth, range.rectHeight);
				var p2Global:Point = chart1.localToGlobal(p2);
				var rect:Rectangle = new Rectangle(p1Global.x, p1Global.y, p2Global.x, p2Global.y)
				
				var newDP:ArrayCollection = new ArrayCollection();
				var a1:Array = series1.getItemsInRegion(rect);
				for(var i:int=0;i<a1.length;i++){
					newDP.addItem(a1[i].item);
				}
				if(a1.length > 1){
					series1.dataProvider = newDP;
					range.rectX = range.rectY = range.rectWidth = range.rectHeight = 0;
				}
			}*/

			protected function group1_initializeHandler(event:FlexEvent):void
			{
				trace ("initialize: " + event.target);
			}

		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Define custom colors for use as plot point fills. -->
		<mx:SolidColor id="sc1" color="0x005500" alpha="1"/>
		<!-- Define custom Strokes. -->
		<mx:Stroke id="s1" color="green" weight="1"/>
		<mx:Stroke id="s2" color="blue" alpha=".4"/>
		
		<!--mx:SeriesZoom id="zoomInEffect" duration="1000" /-->  
	</fx:Declarations>
	<s:layout>
		<s:VerticalLayout />
	</s:layout>
	<mx:PlotChart id="chart1" selectionMode="multiple" width="100%" height="100%"
				  showDataTips="true" dataTipRenderer="{MyDataTip}" dataTipFunction="chart_dataTipFunction" dataTipMode="single"
				  mouseUp="series1_clickHandler(event)"  styleName="itemrendererstyle">
		<mx:verticalAxis>
			<mx:LinearAxis id="axisObj" title="{statIdy}" autoAdjust="true" baseAtZero="false" />
		</mx:verticalAxis>
		<mx:horizontalAxis>
			<mx:LinearAxis title="{statIdx}" autoAdjust="true" baseAtZero="false" />
		</mx:horizontalAxis>
		<mx:series>
			<mx:PlotSeries id="series1" selectable="true" selectedIndices="{selectedIdx}" xField="{statIdx}" yField="{statIdy}"
						   dataProvider="{dataset.values}"  displayName="{statIdy}" itemRenderer="mx.charts.renderers.CircleItemRenderer"
						   styleName="itemrendererstyle" fill="{sc1}" stroke="{s1}" showDataEffect="zoomInEffect"/>
		</mx:series>
		<mx:backgroundElements>
			<!--utils:PanAndZoom /-->
			<!--utils:RangeSelector id="range" /-->
			<mx:GridLines id="gridLines" gridDirection="both" horizontalStroke="{s2}" >
				<mx:verticalStroke>
					{s2}
				</mx:verticalStroke>
			</mx:GridLines>
		</mx:backgroundElements>
	</mx:PlotChart>
</s:Group>