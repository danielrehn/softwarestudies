#! /usr/bin/env python

import getopt, sys, os

# default parameters
n = 16
k = 2

CAPATH = None


def usage():
    print 'USAGE: adaptiveColorQ [OPTIONS] <input directory>'
    print 'OPTIONS' 
    print '\t-n N'
    print '\t\tSet number of colors to reduce to N. Default=%s'%n
    print '\t-k K'
    print '\t\tSet number of colors to report to K. Default=%s'%k
    print '\t--help'
    print '\t\tPrint this usage screen'


def process(dir):

    matlabPath = os.path.join(CAPATH,'matlab')
    matlabPath = os.path.join(matlabPath,'adaptiveColorQ')
    sourceDir = os.path.abspath(dir).rstrip('/') + '/'
    command = 'matlab -nodisplay -nojvm '+\
        '-r "path(path,\'%s\'); '%(matlabPath) +\
        'adaptiveColorQ(\'%s\',%s,%s); '%(sourceDir,n,k)+\
        'exit;"'
    print command
    error = os.system(command)
    if error != 0:
        print 'Error: adaptiveColorQ'
        sys.exit(-1)


def main():

    global CAPATH
    global n,k

    try:
        opts, args = getopt.getopt(sys.argv[1:], 'n:k:', ['help'])
    except getopt.GetoptError:
        print 'Error: Illegal arguments'
        usage()
        sys.exit(2)

    for o, a in opts:
        if o in ('--help'):
            usage()
            sys.exit()
        elif o in ('-n'):
            n = a
        elif o in ('-k'):
            k = a
        else:
            assert False, "unhandled option"

    if len(args) != 1:
        print 'Invalid arguments. --help for more info'
        sys.exit(1)

    try:
        CAPATH = os.environ['CAPATH']
    except:
        print 'ERROR: CAPATH enviroment variable not found'
        sys.exit(1)

    process(args[0].rstrip('/'))
            
if __name__ == "__main__":
    main()
